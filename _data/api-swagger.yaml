swagger: '2.0'
info:
  title: Signhost api
  description: Integrate with signhost using our API to create transactions and retrieve current status.
  version: "1.0"
  contact: 
    name: "support@signhost.com"
host: api.signhost.com
schemes:
  - https
produces:
  - application/json
parameters:
  AppkeyParam:
    name: Application
    description: The APPKey
    in: header
    type: string
    required: true
  ApiKeyParam:
    name: Authorization
    description: The API key
    in: header
    type: string
    required: true

paths:
  '/api/transaction/{transactionId}':
    get:
      description: Returns current transaction details
      parameters:
        - name: transactionId
          description: ID of the transaction
          in: path
          required: true
          type: string
      responses:
        '200':
          description: Details of the transaction
          schema:
            $ref: "#/definitions/Transaction"
        '401':
          description: Not authorized to access the specified transaction
    delete:
      description: Delete a transaction by a transaction id.
      parameters:
        - name: transactionId
          type: string
          description: ID of the transaction
          in: path
          required: true
        - name: body
          in: body
          description: Cancellation details
          required: false
          schema:
            type: object
            properties:
              SendNotifications:
                type: boolean
                description: Send e-mail notifications to the awaiting signers.
                default: false
              Reason:
                type: string
                description: The reason of cancellation.
      responses:
        '200':
          description: The transaction is succesfully deleted
        '400':
          description: The transaction could not be deleted. Most probable cause is that the transaction is already in an end state.
          schema:
            $ref: '#/definitions/ErrorModel'
            
  '/api/transaction/{transactionId}/file/{fileId}/':
    get:
      description: Returns the (signed) document(s).
      produces:
      - 'application/pdf'
      - 'application/json'
      parameters:
        - name: transactionId
          description: ID of the description
          in: path
          required: true
          type: string
        - name: fileId
          description: A unique identifier provided by you for the file.
          in: path
          required: true
          type: string
      responses:
        '200':
          description: The contents of the file is returned in the body.

  '/api/file/receipt/{transactionId}':
    get:
      description: Returns the receipt when the transaction is successfully signed (Status=30)
      produces:
      - 'application/pdf'          
      parameters:
        - name: transactionId
          description: ID of the description
          in: path
          required: true
          type: string
      responses:
       '200':
          description: (signed) document(s)

  '/api/transaction':
    post:
      description: Creates a new transaction
      parameters:
        - in: body
          name: transaction
          description: Transaction to be added
          required: true
          schema:
            $ref: "#/definitions/Transaction"
      responses:
        '200':
          description: Details of the created transaction.
          schema:
            $ref: "#/definitions/Transaction"
        '401':
          description: Not authorized to create a transaction.

  '/api/transaction/{transactionId}/file/{fileId}':
    put:
      description: Add a file to the transaction or overwrite an existing file with the same {fileId}. Only PDF documents with Content-Type 'application/pdf' are accepted.
      consumes:
        - 'application/pdf'
      parameters:
        - name: transactionId
          description: ID of an existing -- not yet started -- transaction
          in: path
          required: true
          type: string
        - name: fileId
          description: A unique identifier provided by you for the file.
          in: path
          required: true
          type: string
      responses:
        '201':
          description: File succesfully created and added to the transaction
        '204':
          description: Existing file replaced within the specified transaction
        '409':
          description: |
            Conflict while trying to overwrite the file.
            You have used the same fileId again which causes us to overwrite the file (which is a valid action).
            However the same fileid was provided in a to short time interval making it unclear which version was meant to be the latest version.
  '/api/transaction/{transactionId}/start':
    put:
      description: Starts a transaction with the same {transactionId}
      parameters:
        - name: transactionId
          description: ID of an existing -- not yet started -- transaction
          in: path
          required: true
          type: string
      responses:
        '204':
          description: The transaction is started.
        '400':
          description: The transaction could not be started. Most probably causes are that the created transactions contains errors causing the transaction to be in Failed status.
          schema:
            $ref: '#/definitions/ErrorModel'
            
definitions:
  Transaction:
    type: object
    properties:
      Files:
        readOnly: true
        type: object
        description: A map of files attached to this transaction.
        additionalProperties:
          $ref: '#/definitions/FileEntry'
      Seal:
        type: boolean
        default: true
        description: Seal the document before sending to the signers.
      Signers:
        type: array
        description: The signer information, max 4 signers.
        items:
          type: object
          required:
          - Email
          properties:
            Email:
              type: string
              description: The e-mail address of the signer
              example: "john.doe@example.com"
            Mobile:
              type: string
              description: |
                The mobile phone number of the signer.
                Required if `RequireSmsVerification` is set.
              example: "+31123456789"
            Iban:
              type: string
              description: |
                The IBAN of the signer.
                Required if `RequireIdealVerification` is set.
              example: "NL13TEST0123456789"
            BSN:
              type: string
              description:  |
                The BSN of the signer.
                Required if `RequireDigiDVerification` is set.
              example: "900078479"
            RequireScribble:
              description: Require that the signer has to draw a scribble.
              default: false
              type: boolean
            RequireSmsVerification:
              description: Require that the signer has to verify by sms.
              default: false
              type: boolean
            RequireIdealVerification:
              description: Require that the signer has to verify by iDeal.
              default: false
              type: boolean
            RequireDigiDVerification:
              description: Require that the signer has to verify by DigiD.
              default: false
              type: boolean
            RequireKennisnetVerification:
              description: Require that the signer has to verify by Kennisnet.
              default: false
              type: boolean
            RequireSurfnetVerification:
              description: Require that the signer has to verify by Surfnet.
              default: false
              type: boolean
            Verifications:
              description: List of verifications that the signer has to verify with.
              type: array
              items:
                $ref: '#/definitions/Verification'
            SendSignRequest:
              description: Send a sign invitation to the signer his e-mail address.
              default: false
              type: boolean
            SignRequestMessage:
              description: |
                The message of the sign request in plain text.
                Newlines can be created by including a \n in the json, HTML is not allowed.
                Required if `SendSignRequest` is true
              type: string
            SendSignConfirmation:
              description: |
                Send the sign confirmation to the signer his e-mail address.
                Default value is the value of `SendSignRequest`
              type: boolean
            Language:
              description: The language of the receiving user, only de-DE, en-US, es-ES, fr-FR, it-IT and nl-NL are allowed.
              default: nl-NL
              type: string
              enum:
              - de-DE
              - en-US
              - es-ES
              - fr-FR
              - it-IT
              - nl-NL
            ScribbleName:
              description: The name of the signer, this will be pre filled in the scribble form.
              type: string
            ScribbleNameFixed:
              description: The switch to allow or disallow the signer to modify the ScribbleName in the scribble form.
              default: false
              type: boolean
            DaysToRemind:
              description: Amount of days before reminding the signers. -1 to disable reminders.
              default: 7
              type: integer
            Expires:
              description: When set the signer is no longer allowed to sign the transaction after this date.
              type: string
              format: date-time
            Reference:
              description: The reference of the signer.
              type: string
            ReturnUrl:
              description: The url to redirect the user to after signing, rejecting or cancelling.
              default: https://signhost.com
              type: string
            Activities:
              type: array
              readOnly: true
              description: |
                List of activities attached to this signer.
                Activities are added by signhost when a signer event occured.
              items:
                type: object
                properties:
                  Id:
                    type: string
                  Code:
                    type: integer
                    enum:
                    - 101
                    - 102
                    - 103
                    - 104
                    - 105
                    - 201
                    - 202
                    - 203
                    - 301
                    - 302
                    - 303
                    - 401
                    - 402
                    - 403
                    description: |
                      * 101 -	Invitation sent
                      * 102 -	Received
                      * 103 -	Opened
                      * 104 -	Reminder sent
                      * 105 -	Document opened, Info property contains the file id of the opened document.
                      * 201 -	Cancelled
                      * 202 -	Rejected
                      * 203 -	Signed
                      * 301 -	Signed document sent
                      * 302 -	Signed document opended
                      * 303 -	Signed document downloaded
                      * 401 -	Receipt sent
                      * 402 -	Receipt opened
                      * 403 -	Receipt downloaded
                  Info:
                    type: string
                    description: May contain additional information belonging to this activity
                  CreateDateTime:
                    type: string
                    format: date-time
      Receivers:
        type: array
        items:
          type: object
          required:
          - Name
          - Email
          - Message
          properties:
            Name:
              type: string
              description: The name of the receiver.
            Email:
              type: string
              description: The e-mail address of the reveiver.
            Language:
              type: string
              description: The language of the receiver, only de-DE, en-US, es-ES, fr-FR, it-IT and nl-NL are allowed.
              default: nl-NL
            Message:
              type: string
              description: The email message towards the receiver in plain text. Newlines can be created by including a \n in the json, HTML is not allowed.
            Reference:
              type: string
              description: The reference of the receiver.
      Reference:
        type: string
        description: The reference of the transaction. For example "1234"
      PostbackUrl:
        type: string
        description: The absolute url to postback the status updates. For example https://example.com/postback.php
      SignRequestMode:
        type: integer
        format: int32
        description: Set to 1 for sending at once, to 2 for sequential.
        default: 2
      DaysToExpire:
        type: integer
        format: int32
        description: Amount of days before expiration. Max 90 days.
        default: 60
      SendEmailNotifications:
        type: boolean
        description: Send e-mail notifications to the sender.
        default: false
      Status:
        type: integer
        format: int32
        description: |
          Current transaction status.

          * 5 - Waiting for document
          * 10 - Waiting for signer
          * 20 - In progress
          * 30 - Signed (end state)
          * 40 - Rejected (end state)
          * 50 - Expired (end state)
          * 60 - Cancelled (end state)
          * 70 - Failed (end state)
        enum:
        - 5
        - 10
        - 20
        - 30
        - 40
        - 50
        - 60
        - 70
      Context:
        type: object
        description: Any valid json object which we will return back to you when doing a GET on the transaction or when we send a postback.

  Verification:
    type: object
    discriminator: Type
    properties:
      Type:
        type: string
        enum:
          - iDIN
        description:
          Type of the verification object

    required:
    - Type

  iDIN:
    allOf:
    - $ref: '#/definitions/Verification'

  FileEntry:
    type: object
    properties:
      Links: 
        type: array
        items:
          $ref: '#/definitions/Link'
      DisplayName:
        type: string
        description: The name of the document that was displayed to the user while signing the documents.

  Link:
    type: object
    properties:
      Rel: 
        type: string
        description: The type of file you can download.
        enum:
          - file
          - receipt
          - signer.sign
          - signer.download
      Type:
        type: string
        description: The type of the file you can expect to download. Include this in your 'Accept' header when requesting the file.
      Link:
        type: string
        description: Url containing the link to the file.
        
  ErrorModel:
    type: object
    properties:
      Message: 
        type: string
        description: Message describing the error in the request.
  